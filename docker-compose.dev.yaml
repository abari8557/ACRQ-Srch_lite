services:
  back-end:
    build:
      context: node
      target: development
      # dockerfile: ./Dockerfile
    container_name: back-end
    networks: 
      - node-default
    working_dir: /app
    volumes:
      - ./node:/app
      - /app/node_modules
    ports:
      - 82:3000
    depends_on:
      - mongo
      - rabbitmq
    command: npm run dev
    tty: true


  front-end:
    build: 
      context: react
      target: development
    container_name: front-end
    working_dir: /app
    networks: 
      - node-default
    volumes: 
      - ./react:/app
      - /app/node_modules
    tty: true
    ports: 
      - "5173:5173"
    command: npm run dev    

  mongo:
    image: mongo
    container_name: mongodb
    networks: 
      - node-default
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongoadmin
      - MONGO_INITDB_ROOT_PASSWORD=secret
    # ports:
    #   - 27017:27017
    volumes:
      - mongo-db:/data/db
      
  rabbitmq:
    image: rabbitmq:3.10.8-management
    container_name: 'rabbitmq'
    networks: 
      - node-default
    restart: always
    ports:
        - 5672:5672
        - 81:15672
    volumes:
        - /var/lib/rabbitmq/
        - rabbit-log:/var/log/rabbitmq

  nginx:
    build: 
      context: nginx
    container_name: nginx
    restart: always
    tty: true
    ports: 
      - "8080:80"
    networks: 
      - node-default
    depends_on:
       - back-end
       - front-end           
        
volumes:
  mongo-db:
  rabbit-log:

networks: 
  node-default:
    driver: bridge