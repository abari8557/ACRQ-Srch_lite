services:
  backend:
    build:
      context: node
    container_name: back-end
    working_dir: /app
    networks: 
      - node-default
    volumes:
      - ./node:/app
      - /app/node_modules
    # depends_on:
    #   - mongo
    #   - rabbitmq
    tty: true
    ports:
      - 82:3000
    environment:
      - PORT=3000
    command: npm run start
    
    # restart: always
  front-end:
    build: 
      context: react
    container_name: front-end
    working_dir: /app
    networks: 
      - node-default
    volumes: 
      - ./react:/app
      - /app/node_modules
    tty: true
    ports: 
      - "5173:5173"
    command: npm run dev

  mongo:
    image: mongo
    container_name: mongodb
    networks: 
      - node-default
    restart: always
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_DATABASE=test
      - MONGO_INITDB_ROOT_USERNAME= mongoadmin
      - MONGO_INITDB_ROOT_PASSWORD= secret
    volumes:
      - mongo-db:/data/db
      
  rabbitmq:
    image: rabbitmq:3.10.8-management
    container_name: 'rabbitmq'
    networks: 
      - node-default
    restart: always
    ports:
        - 5672:5672
        - 81:15672
    volumes:
        - /var/lib/rabbitmq/
        - rabbit-log:/var/log/rabbitmq
        
volumes:
  mongo-db:
  rabbit-log:

networks: 
  node-default:
    driver: bridge